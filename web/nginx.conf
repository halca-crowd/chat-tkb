# 実行ユーザー
user  root;
# 使用可能process数
worker_processes  auto;
worker_rlimit_nofile 100000;
# エラーログの設定
error_log  /var/log/nginx/error.log warn;
# processidの格納先
pid        /var/run/nginx.pid;

# イベント処理モジュール
events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

# http関連のモジュール
http {
    proxy_pass_request_headers on;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    keepalive_timeout  65;
    server_tokens off;
    charset UTF-8;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=1000 inactive=10s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;
        
    server {
        listen 80 default;
        listen  [::]:80;
        charset utf-8;
        server_name  localhost;
        client_max_body_size 1024M;

        location ^~ /.well-known {                     # certbot の アクセス先だけは、プロキシしない設定
            root /usr/share/nginx/html;
        }
        location / {
            # return 301 https://$host$request_uri;      # 初回の証明書取得だけは、httpsに飛ばさないようコメントアウト
            root /usr/share/nginx/html;                 # 証明書取得後は、逆にこちらをコメントアウト
        }     

        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }    
    }
    server {
        listen       443 ssl http2;
        listen  [::]:443 ssl http2;
        server_name api-chat-tkb.crowd4u.org;

        ssl_certificate      /etc/letsencrypt/live/api-chat-tkb.crowd4u.org/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/api-chat-tkb.crowd4u.org/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers off;

        add_header Strict-Transport-Security "max-age=2592000" always;

        proxy_redirect                          off;
        proxy_set_header Host                   $host;
        proxy_set_header X-Real-IP              $remote_addr;
        proxy_set_header X-Forwarded-Host       $host;
        proxy_set_header X-Forwarded-Server     $host;
        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;

        location / {
            proxy_pass   http://127.0.0.1:8080;
        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }    
    }
}